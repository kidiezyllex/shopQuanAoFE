import{aN as n,bu as o,bv as u,aT as r,aU as a,aO as s}from"./index-Dpx_4rWJ.js";const i=async(t={})=>await r("/attributes/brands",t),y=async t=>await r(`/attributes/brands/${t}`),l=async t=>await n("/attributes/brands",t),b=async(t,e)=>await o(`/attributes/brands/${t}`,e),d=async t=>await u(`/attributes/brands/${t}`),g=async(t={})=>await r("/attributes/categories",t),C=async t=>await r(`/attributes/categories/${t}`),w=async t=>await n("/attributes/categories",t),F=async(t,e)=>await o(`/attributes/categories/${t}`,e),q=async t=>await u(`/attributes/categories/${t}`),m=async(t={})=>await r("/attributes/materials",t),B=async t=>await r(`/attributes/materials/${t}`),$=async t=>await n("/attributes/materials",t),M=async(t,e)=>await o(`/attributes/materials/${t}`,e),z=async t=>await u(`/attributes/materials/${t}`),D=async(t={})=>await r("/attributes/colors",t),K=async t=>await r(`/attributes/colors/${t}`),p=async t=>await n("/attributes/colors",t),S=async(t,e)=>await o(`/attributes/colors/${t}`,e),A=async t=>await u(`/attributes/colors/${t}`),U=async(t={})=>await r("/attributes/sizes",t),f=async t=>await n("/attributes/sizes",t),v=async t=>await u(`/attributes/sizes/${t}`),h=(t={})=>a({queryKey:["brands",t],queryFn:()=>i(t)}),j=t=>a({queryKey:["brand",t],queryFn:()=>y(t),enabled:!!t}),k=()=>s({mutationFn:t=>l(t)}),x=()=>s({mutationFn:({brandId:t,payload:e})=>b(t,e)}),G=()=>s({mutationFn:t=>d(t)}),N=(t={})=>a({queryKey:["categories",t],queryFn:()=>g(t)}),O=t=>a({queryKey:["category",t],queryFn:()=>C(t),enabled:!!t}),Q=()=>s({mutationFn:t=>w(t)}),T=()=>s({mutationFn:({categoryId:t,payload:e})=>F(t,e)}),E=()=>s({mutationFn:t=>q(t)}),H=(t={})=>a({queryKey:["materials",t],queryFn:()=>m(t)}),J=t=>a({queryKey:["material",t],queryFn:()=>B(t),enabled:!!t}),L=()=>s({mutationFn:t=>$(t)}),R=()=>s({mutationFn:({materialId:t,payload:e})=>M(t,e)}),V=()=>s({mutationFn:t=>z(t)}),W=(t={})=>a({queryKey:["colors",t],queryFn:()=>D(t)}),X=t=>a({queryKey:["color",t],queryFn:()=>K(t),enabled:!!t}),Y=()=>s({mutationFn:t=>p(t)}),Z=()=>s({mutationFn:({colorId:t,payload:e})=>S(t,e)}),_=()=>s({mutationFn:t=>A(t)}),I=(t={})=>a({queryKey:["sizes",t],queryFn:()=>U(t)}),tt=()=>s({mutationFn:t=>f(t)}),et=()=>s({mutationFn:t=>v(t)});export{N as a,G as b,k as c,j as d,x as e,E as f,Q as g,O as h,T as i,W as j,_ as k,Y as l,X as m,Z as n,I as o,H as p,V as q,L as r,J as s,R as t,h as u,et as v,tt as w};
